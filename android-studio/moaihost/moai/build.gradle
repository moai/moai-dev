apply plugin: 'com.android.library'

android {

    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // We need to set the libs dir for the output and the srcdirs to null to
    // prevent the gradle ndk hooks from firing.  We need to depend on Android.mk
    // NOTE: this appears to break the android studio 'android' project view
    // (at least, it hides the jni directory…)
    sourceSets.main {
        //Tell Gradle where to put the compiled library
        jniLibs.srcDir 'src/main/libs'

        //hide the ‘jni’ folder so that the automatic gradle build doesn’t try to run
        //it’s own ndk-build process
        jni.srcDirs = [];

        //manifest.srcFile 'src/main/AndroidManifest.xml'
        //java.srcDirs = ['src']
        //res.srcDirs = ['res']
    }

    task buildNative ( type: Exec, description: 'Compile JNI source via NDK' ) {
        commandLine "floob"
        def ndkDir = android.plugin.ndkFolder
        commandLine "$ndkDir/ndk-build",
                '-C', file ( 'src/main/jni' ).absolutePath,
                '-j', Runtime.runtime.availableProcessors (),
                'all',
                'NDK_DEBUG=1'
    }

    task cleanNative ( type: Exec, description: 'Clean JNI object files' ) {
        def ndkDir = android.plugin.ndkFolder
        commandLine "$ndkDir/ndk-build",
                '-C', file ( 'src/main/jni' ).absolutePath,
                'clean'
    }

    clean.dependsOn 'cleanNative'

    tasks.withType ( JavaCompile ) {
        compileTask -> compileTask.dependsOn buildNative
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:21.0.3'
}
