apply plugin: MoaiSettings

class MoaiSettings implements Plugin<Settings> {


    void apply(Settings settings) {
        //get any enabled modules

        def libRoot = "lib"
        if (settings.hasProperty('moaiLibRoot')) {
            libRoot = settings.moaiLibRoot
        } else {
            settings.moaiLibRoot = libRoot
        }


        def srcRoot = "src"
        if (settings.hasProperty('moaiSrcRoot')) {
            srcRoot = settings.moaiSrcRoot
        } else {
            settings.moaiSrcRoot = srcRoot
        }

        if (!settings.hasProperty('moaiModules') || settings.moaiModules == null) {
            settings.moaiModules=""
        }
        def modules = settings.moaiModules.toString().split(",").collect { i -> i.trim() }
        if (settings.moaiModules == "") {
            modules = []
        }
        //always include core
        settings.include(":core")
        settings.project(":core").projectDir = new File(srcRoot+"/moai-android/java")

        def enableModule = {
            module ->
                def modproj = new File(srcRoot+"/"+module+"/java/build.gradle")
                if (modproj.exists()) {
                    println("enabling ${module}")
                    settings.include(":${module}")
                    settings.project(":${module}").projectDir = new File(srcRoot+"/"+module+"/java")
                    settings.project(":${module}").name = module
                } else {
                    throw new Exception("Missing module ${module} not found at ${srcRoot}/${module}/java")
                }
        }

        //include enabled modules projects
        for (module in modules) {
           enableModule(module)
        }

        settings.ext.enableModule = enableModule
    }
}